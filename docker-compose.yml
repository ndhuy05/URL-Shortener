services:
  # Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: url-shortener-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql

  # Users Service
  users-service:
    build:
      context: ./Users
      dockerfile: Dockerfile
    container_name: users-service
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=UsersDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - sqlserver

  # Shorten Service
  shorten-service:
    build:
      context: ./Shorten
      dockerfile: Dockerfile
    container_name: shorten-service
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ShortenDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - sqlserver

  # Ocelot Gateway
  ocelot-gateway:
    build:
      context: ./OcelotGateway
      dockerfile: Dockerfile
    container_name: ocelot-gateway
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    depends_on:
      - users-service
      - shorten-service

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - ocelot-gateway

volumes:
  sqlserver_data:
